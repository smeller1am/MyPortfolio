{
  "openapi": "3.0.1",
  "info": {
    "title": "Takara.Api",
    "version": "1.0"
  },
  "paths": {
    "/api/v{version}/Address/GetUsersAddresses": {
      "get": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAddressResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Address/CreateAddress": {
      "post": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAddressResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAddressResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/ApiToMobile/generate-api": {
      "get": {
        "tags": [
          "ApiToMobile"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v{version}/Authentication/Login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseRestApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Authentication/Logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Authentication/SendOneTimePassword": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendOneTimePasswordRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendOneTimePasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendOneTimePasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendOneTimePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendOneTimePasswordReponseRestApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendOneTimePasswordReponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Basket/GetBasket": {
      "get": {
        "tags": [
          "Basket"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBasketItemsResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBasketItemsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Basket/RemoveAllInBasket": {
      "delete": {
        "tags": [
          "Basket"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveAllInBasketResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveAllInBasketResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveAllInBasketResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Basket/AddToBasket": {
      "post": {
        "tags": [
          "Basket"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Basket/RemoveFromBasket": {
      "delete": {
        "tags": [
          "Basket"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromBasketResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromBasketResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromBasketResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Branch/GetBranches": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBranchResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Branch/CreateBranch": {
      "post": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBranchResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBranchResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Branch/UpdateBranch": {
      "post": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBranchResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBranchResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBranchResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Branch/DeleteBranch": {
      "delete": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBranchResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBranchResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBranchResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Category/GetCategories": {
      "get": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "ParrentCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ObjectsCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Contacts/GetContacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContactsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Contacts/CreateContacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactsResponseRestApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Dadata/GetAddressHint": {
      "get": {
        "tags": [
          "Dadata"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DadataResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/DeliveryConditions/GetDeliveryConditions": {
      "get": {
        "tags": [
          "DeliveryConditions"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeliveryConditionsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/DeliveryConditions/CreateDeliveryConditions": {
      "post": {
        "tags": [
          "DeliveryConditions"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryConditionsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryConditionsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryConditionsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeliveryConditionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeliveryConditionsResponseRestApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeliveryConditionsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Document/GetDocuments": {
      "get": {
        "tags": [
          "Document"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Favorites/GetUsersFavorites": {
      "get": {
        "tags": [
          "Favorites"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Favorites/CreateFavorites": {
      "post": {
        "tags": [
          "Favorites"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavoritesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavoritesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavoritesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavoritesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFavoritesResponseRestApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFavoritesResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFavoritesResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Favorites/RemoveFromFavorites": {
      "delete": {
        "tags": [
          "Favorites"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromFavoritesResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromFavoritesResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromFavoritesResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Gift/GetGifts": {
      "get": {
        "tags": [
          "Gift"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGiftsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/MainSliderItem/GetMainSliderItemsByFilter": {
      "get": {
        "tags": [
          "MainSliderItem"
        ],
        "parameters": [
          {
            "name": "StartIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ObjectsCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainSliderItemsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/MainSliderItem/GetMainSliderItems": {
      "get": {
        "tags": [
          "MainSliderItem"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainSliderItemsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/MainSliderItem/GetMainSliderItemById": {
      "get": {
        "tags": [
          "MainSliderItem"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetMainSliderItemByIdRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMainSliderItemByIdRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMainSliderItemByIdRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetMainSliderItemByIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainSliderItemResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainSliderItemResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Order/GetMaxBonusesOrder": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rkObjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoubleRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Order/GetBonusBalance": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32NullableRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32NullableRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Order/GetRestaurants": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRestaurantsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Order/ConfirmOrder": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rkObjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useBonus",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailsGetMaxBonusesOrderRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Order/GetGuestOrders": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGuestOrdersResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Order/GetUserOrders": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrdersResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Order/CreateUserOrder": {
      "post": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserOrderRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserOrderRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserOrderResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserOrderResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserOrderResponseRestApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserOrderResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Order/CreateOrderAgain": {
      "post": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderAgainRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderAgainRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderAgainRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderAgainRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderAgainResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderAgainResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderAgainResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Prediction/GetRandomPrediction": {
      "get": {
        "tags": [
          "Prediction"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRandomPredictResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Product/GetProductsByFilter": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CategoryIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "SearchString",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ObjectsCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Product/GetRecommendations": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/ProductsToOrder/GetProductsToOrderByOrder": {
      "get": {
        "tags": [
          "ProductsToOrder"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsToOrderResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsToOrderResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Promo/GetPromotions": {
      "get": {
        "tags": [
          "Promo"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromoResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Promo/CreatePromos": {
      "post": {
        "tags": [
          "Promo"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromoRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePromoResponseRestApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePromoResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Promo/DeletePromos": {
      "delete": {
        "tags": [
          "Promo"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePromoResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePromoResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePromoResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Promo/UpdatePromos": {
      "post": {
        "tags": [
          "Promo"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromoRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePromoResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePromoResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePromoResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Setting/GetAllSettings": {
      "get": {
        "tags": [
          "Setting"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllSettingsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Setting/CreateSetting": {
      "post": {
        "tags": [
          "Setting"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettingRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSettingResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSettingResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Setting/UpdateSetting": {
      "post": {
        "tags": [
          "Setting"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSettingResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSettingResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSettingResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/Setting/DeleteSetting": {
      "delete": {
        "tags": [
          "Setting"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSettingResponseRestApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSettingResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSettingResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/SocialNetwork/GetSocialNetworks": {
      "get": {
        "tags": [
          "SocialNetwork"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSocialNetworksResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSocialNetworksResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/User/GetAllGuests": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/User/GetUserInformation": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/User/DeleteUser": {
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/User/UpdateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/VacancyForm/GetVacancyForms": {
      "get": {
        "tags": [
          "VacancyForm"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacancyFormsResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacancyFormsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/VacancyForm/GetVacancyFormsById": {
      "get": {
        "tags": [
          "VacancyForm"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetVacancyFormsByVacancyTypeId"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetVacancyFormsByVacancyTypeId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetVacancyFormsByVacancyTypeId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetVacancyFormsByVacancyTypeId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacancyFormsResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacancyFormsResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/VacancyForm/CreateVacancyForm": {
      "post": {
        "tags": [
          "VacancyForm"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacancyFormRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacancyFormRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacancyFormRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacancyFormRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVacancyFormResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVacancyFormResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/VacancyTypes/GetVacancyTypes": {
      "get": {
        "tags": [
          "VacancyTypes"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacancyTypesResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacancyTypesResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{version}/VacancyTypes/CreateVacancyType": {
      "post": {
        "tags": [
          "VacancyTypes"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacancyTypeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacancyTypeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacancyTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVacancyTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVacancyTypeResponseRestApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVacancyTypeResponseRestApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressModel": {
        "required": [
          "city",
          "house",
          "street"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "street": {
            "type": "string"
          },
          "house": {
            "type": "string"
          },
          "entrance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "floor": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "apartament": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "city": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "fullAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddToBasketRequest": {
        "required": [
          "productId"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddToBasketResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "AddToBasketResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/AddToBasketResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BasketItemModel": {
        "required": [
          "product"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModel"
          }
        },
        "additionalProperties": false
      },
      "BonusesGetMaxBonusesOrder": {
        "type": "object",
        "properties": {
          "bonuses": {
            "$ref": "#/components/schemas/MaxGetMaxBonusesOrder"
          }
        },
        "additionalProperties": false
      },
      "BranchModel": {
        "required": [
          "address",
          "neighborhood",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "neighborhood": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "contactsId": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CategoryModel": {
        "required": [
          "name",
          "photoPath"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "photoPath": {
            "type": "string"
          },
          "parrentCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "isSpice": {
            "type": "boolean"
          },
          "sortNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChoiceOfDeliveryTime": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ContactsModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "qualityControlPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "workingTime": {
            "type": "string",
            "nullable": true
          },
          "branchs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAddressRequest": {
        "required": [
          "address",
          "city"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "entrance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "floor": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "apartament": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAddressResponse": {
        "required": [
          "address"
        ],
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/AddressModel"
          }
        },
        "additionalProperties": false
      },
      "CreateAddressResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateAddressResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateBranchRequest": {
        "required": [
          "address",
          "neighborhood",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "neighborhood": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "contactsId": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateBranchResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateBranchResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateBranchResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateContactsRequest": {
        "required": [
          "phoneNumber",
          "qualityControlPhoneNumber",
          "workingTime"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "qualityControlPhoneNumber": {
            "type": "string"
          },
          "workingTime": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateContactsResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateContactsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateContactsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateDeliveryConditionsRequest": {
        "required": [
          "courierDelivery",
          "deliveryCost",
          "deliveryTime",
          "minimumSumOrder",
          "selfDelivery",
          "takingOrders"
        ],
        "type": "object",
        "properties": {
          "takingOrders": {
            "type": "string"
          },
          "minimumSumOrder": {
            "type": "string"
          },
          "deliveryCost": {
            "type": "string"
          },
          "deliveryTime": {
            "type": "string"
          },
          "courierDelivery": {
            "type": "string"
          },
          "selfDelivery": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateDeliveryConditionsResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateDeliveryConditionsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateDeliveryConditionsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateFavoritesRequest": {
        "required": [
          "productId"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateFavoritesResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateFavoritesResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateFavoritesResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderAgainRequest": {
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateOrderAgainResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateOrderAgainResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateOrderAgainResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreatePromoRequest": {
        "required": [
          "description",
          "photoPath",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photoPath": {
            "type": "string"
          },
          "expirationDateStart": {
            "type": "string",
            "format": "date-time"
          },
          "expirationDateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePromoResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreatePromoResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreatePromoResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateSettingRequest": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateSettingResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateSettingResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateSettingResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserOrderRequest": {
        "required": [
          "choiceOfDeliveryTime",
          "deliveryTime",
          "numberOfDevices",
          "productsToOrder",
          "recipient",
          "recipientPhone",
          "wayOfDelivery",
          "wayOfPayment"
        ],
        "type": "object",
        "properties": {
          "recipient": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "numberOfDevices": {
            "type": "integer",
            "format": "int32"
          },
          "wayOfDelivery": {
            "$ref": "#/components/schemas/WayOfDelivery"
          },
          "choiceOfDeliveryTime": {
            "$ref": "#/components/schemas/ChoiceOfDeliveryTime"
          },
          "deliveryTime": {
            "type": "string",
            "format": "date-time"
          },
          "wayOfPayment": {
            "$ref": "#/components/schemas/WayOfPayment"
          },
          "points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "restaurantId": {
            "type": "string",
            "nullable": true
          },
          "individualNumber": {
            "type": "string",
            "nullable": true
          },
          "orderComment": {
            "type": "string",
            "nullable": true
          },
          "giftId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productsToOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsToOrderModel"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateUserOrderResponse": {
        "required": [
          "id",
          "time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateUserOrderResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateUserOrderResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateVacancyFormRequest": {
        "required": [
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "vacancyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string"
          },
          "previousJob": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateVacancyFormResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateVacancyFormResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateVacancyFormResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateVacancyTypeRequest": {
        "required": [
          "vacancyName"
        ],
        "type": "object",
        "properties": {
          "vacancyName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateVacancyTypeResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateVacancyTypeResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/CreateVacancyTypeResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DadataResponse": {
        "required": [
          "places"
        ],
        "type": "object",
        "properties": {
          "places": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "DadataResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/DadataResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DeleteBranchResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "DeleteBranchResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/DeleteBranchResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DeletePromoResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "DeletePromoResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/DeletePromoResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DeleteSettingResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "DeleteSettingResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/DeleteSettingResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DeleteUserResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "DeleteUserResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/DeleteUserResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DeliveryConditionsModel": {
        "required": [
          "courierDelivery",
          "deliveryCost",
          "deliveryTime",
          "minimumSumOrder",
          "selfDelivery",
          "takingOrders"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "takingOrders": {
            "type": "string"
          },
          "minimumSumOrder": {
            "type": "string"
          },
          "deliveryCost": {
            "type": "string"
          },
          "deliveryTime": {
            "type": "string"
          },
          "courierDelivery": {
            "type": "string"
          },
          "selfDelivery": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DetailsGetMaxBonusesOrder": {
        "type": "object",
        "properties": {
          "details": {
            "$ref": "#/components/schemas/BonusesGetMaxBonusesOrder"
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DetailsGetMaxBonusesOrderRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/DetailsGetMaxBonusesOrder"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DocumentModel": {
        "required": [
          "documentType",
          "link"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "type": "string"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          }
        },
        "additionalProperties": false
      },
      "DocumentType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "DoubleRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "number",
            "format": "double"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Failure": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FavoritesModel": {
        "required": [
          "product"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModel"
          }
        },
        "additionalProperties": false
      },
      "GetAddressResponse": {
        "required": [
          "address"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetAddressResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetAddressResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetAllSettingsResponse": {
        "required": [
          "settings"
        ],
        "type": "object",
        "properties": {
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetAllSettingsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetAllSettingsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetBasketItemsResponse": {
        "required": [
          "basketItems"
        ],
        "type": "object",
        "properties": {
          "basketItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasketItemModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetBasketItemsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetBasketItemsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetBranchResponse": {
        "required": [
          "branchs"
        ],
        "type": "object",
        "properties": {
          "branchs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetBranchResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetBranchResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetCategoryResponse": {
        "required": [
          "categories"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetCategoryResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetCategoryResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetContactsResponse": {
        "required": [
          "contacts"
        ],
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components/schemas/ContactsModel"
          }
        },
        "additionalProperties": false
      },
      "GetContactsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetContactsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetDeliveryConditionsResponse": {
        "required": [
          "deliveryConditions"
        ],
        "type": "object",
        "properties": {
          "deliveryConditions": {
            "$ref": "#/components/schemas/DeliveryConditionsModel"
          }
        },
        "additionalProperties": false
      },
      "GetDeliveryConditionsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetDeliveryConditionsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetDocumentResponse": {
        "required": [
          "documentModels"
        ],
        "type": "object",
        "properties": {
          "documentModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetDocumentResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetDocumentResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetGiftsResponse": {
        "required": [
          "gifts"
        ],
        "type": "object",
        "properties": {
          "gifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GiftModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetGiftsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetGiftsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetGuestOrdersResponse": {
        "type": "object",
        "properties": {
          "guestOrderModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuestOrderElementDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGuestOrdersResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetGuestOrdersResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetMainSliderItemByIdRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetMainSliderItemResponse": {
        "type": "object",
        "properties": {
          "mainSliderItem": {
            "$ref": "#/components/schemas/MainSliderItemModel"
          }
        },
        "additionalProperties": false
      },
      "GetMainSliderItemResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetMainSliderItemResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetMainSliderItemsResponse": {
        "type": "object",
        "properties": {
          "mainSliderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MainSliderItemModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMainSliderItemsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetMainSliderItemsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetOrdersResponse": {
        "required": [
          "orders"
        ],
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetOrdersResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetOrdersResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetProductsResponse": {
        "required": [
          "products"
        ],
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetProductsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetProductsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetProductsToOrderResponse": {
        "required": [
          "productsToOrders"
        ],
        "type": "object",
        "properties": {
          "productsToOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsToOrderModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetProductsToOrderResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetProductsToOrderResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetPromoResponse": {
        "required": [
          "promos"
        ],
        "type": "object",
        "properties": {
          "promos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromoModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetPromoResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetPromoResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetRandomPredictResponse": {
        "required": [
          "prediction"
        ],
        "type": "object",
        "properties": {
          "prediction": {
            "$ref": "#/components/schemas/PredictionModel"
          }
        },
        "additionalProperties": false
      },
      "GetRandomPredictResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetRandomPredictResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetRestaurantsResponse": {
        "required": [
          "restaurants"
        ],
        "type": "object",
        "properties": {
          "restaurants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestaurantDto"
            }
          }
        },
        "additionalProperties": false
      },
      "GetRestaurantsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetRestaurantsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetSocialNetworksResponse": {
        "required": [
          "socialNetworks"
        ],
        "type": "object",
        "properties": {
          "socialNetworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialNetworkModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetSocialNetworksResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetSocialNetworksResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetUserResponse": {
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserModel"
          }
        },
        "additionalProperties": false
      },
      "GetUserResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetUserResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetVacancyFormsByVacancyTypeId": {
        "required": [
          "vacancyTypeId"
        ],
        "type": "object",
        "properties": {
          "vacancyTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetVacancyFormsResponse": {
        "required": [
          "vacancyForms"
        ],
        "type": "object",
        "properties": {
          "vacancyForms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VacancyFormModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetVacancyFormsResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetVacancyFormsResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetVacancyTypesResponse": {
        "required": [
          "vacancyTypes"
        ],
        "type": "object",
        "properties": {
          "vacancyTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VacancyTypeModel"
            }
          }
        },
        "additionalProperties": false
      },
      "GetVacancyTypesResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GetVacancyTypesResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GiftModel": {
        "required": [
          "active",
          "availableBill",
          "product"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "availableBill": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModel"
          }
        },
        "additionalProperties": false
      },
      "GuestDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "nullable": true
          },
          "loyaltyCardDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyCardDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GuestOrderElementDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "fullSum": {
            "type": "number",
            "format": "double"
          },
          "sumToPay": {
            "type": "number",
            "format": "double"
          },
          "freeProductSum": {
            "type": "number",
            "format": "double"
          },
          "paidWithBonuses": {
            "type": "number",
            "format": "double"
          },
          "earnedBonuses": {
            "type": "number",
            "format": "double"
          },
          "bonusPaymentRollbackSum": {
            "type": "number",
            "format": "double"
          },
          "openTime": {
            "type": "string",
            "format": "date-time"
          },
          "closeTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GuestResponse": {
        "type": "object",
        "properties": {
          "guests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuestDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GuestResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/GuestResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Int32NullableRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "required": [
          "oneTimePassword",
          "phone"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "oneTimePassword": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "loginStatus": {
            "$ref": "#/components/schemas/LoginStatus"
          },
          "isNewUser": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LoginResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/LoginResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LoginStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "LogoutRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "responseMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogoutResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/LogoutResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LoyaltyCardDto": {
        "type": "object",
        "properties": {
          "track": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "isVirtual": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MainSliderItemModel": {
        "required": [
          "description",
          "link",
          "photoPath",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photoPath": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MaxGetMaxBonusesOrder": {
        "type": "object",
        "properties": {
          "max": {
            "$ref": "#/components/schemas/PaymentsGetMaxBonusesOrder"
          }
        },
        "additionalProperties": false
      },
      "OrderModel": {
        "required": [
          "address",
          "deliveryTime",
          "individualNumber",
          "productsToOrder",
          "recipient",
          "recipientPhone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "recipient": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "numberOfDevices": {
            "type": "integer",
            "format": "int32"
          },
          "choiceOfDeliveryTime": {
            "$ref": "#/components/schemas/ChoiceOfDeliveryTime"
          },
          "wayOfDelivery": {
            "$ref": "#/components/schemas/WayOfDelivery"
          },
          "wayOfPayment": {
            "$ref": "#/components/schemas/WayOfPayment"
          },
          "orderStatus": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "deliveryTime": {
            "type": "string",
            "format": "date-time"
          },
          "individualNumber": {
            "type": "string"
          },
          "orderComment": {
            "type": "string",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "earnPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deliveryPrice": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string"
          },
          "productsToOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsToOrderModel"
            }
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentsGetMaxBonusesOrder": {
        "type": "object",
        "properties": {
          "payments": {
            "$ref": "#/components/schemas/TotalGetMaxBonusesOrder"
          }
        },
        "additionalProperties": false
      },
      "PredictionModel": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProductModel": {
        "required": [
          "category",
          "composition",
          "description",
          "name",
          "photoPath"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "composition": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "kcal": {
            "type": "integer",
            "format": "int32"
          },
          "proteins": {
            "type": "integer",
            "format": "int32"
          },
          "fats": {
            "type": "integer",
            "format": "int32"
          },
          "carbohydrates": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "photoPath": {
            "type": "string"
          },
          "portion": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "isRecommendation": {
            "type": "boolean"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryModel"
          }
        },
        "additionalProperties": false
      },
      "ProductsToOrderModel": {
        "required": [
          "product"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "fullPrice": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/ProductModel"
          }
        },
        "additionalProperties": false
      },
      "PromoModel": {
        "required": [
          "description",
          "photoPath",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photoPath": {
            "type": "string"
          },
          "expirationDateStart": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expirationDateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemoveAllInBasketResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RemoveAllInBasketResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/RemoveAllInBasketResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RemoveFromBasketResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RemoveFromBasketResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/RemoveFromBasketResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RemoveFromFavoritesResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "RemoveFromFavoritesResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/RemoveFromFavoritesResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RestaurantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "restaurantId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "rkObjectId": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SendOneTimePasswordReponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SendOneTimePasswordReponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/SendOneTimePasswordReponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SendOneTimePasswordRequest": {
        "required": [
          "phone"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SettingModel": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SocialNetworkModel": {
        "required": [
          "link",
          "socialNetworksType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "type": "string"
          },
          "socialNetworksType": {
            "$ref": "#/components/schemas/SocialNetworksType"
          }
        },
        "additionalProperties": false
      },
      "SocialNetworksType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TotalGetMaxBonusesOrder": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateBranchRequest": {
        "required": [
          "address",
          "neighborhood",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "neighborhood": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "contactsId": {
            "type": "integer",
            "format": "int32"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateBranchResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdateBranchResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/UpdateBranchResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePromoRequest": {
        "required": [
          "description",
          "expirationDateStart",
          "id",
          "photoPath",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photoPath": {
            "type": "string"
          },
          "expirationDateStart": {
            "type": "string",
            "format": "date-time"
          },
          "expirationDateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePromoResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdatePromoResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/UpdatePromoResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSettingRequest": {
        "required": [
          "id",
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateSettingResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdateSettingResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/UpdateSettingResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "mail": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "UpdateUserResponseRestApiResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/UpdateUserResponse"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "required": [
          "addresses",
          "basketItems",
          "favorites",
          "lastLoginDate",
          "orders",
          "phone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "phone": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "isBlocked": {
            "type": "boolean"
          },
          "lastPasswordId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "apiUserToken": {
            "type": "string",
            "nullable": true
          },
          "userRole": {
            "$ref": "#/components/schemas/UserRoles"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "registrationStatus": {
            "$ref": "#/components/schemas/UserRegistrationStatus"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time"
          },
          "mail": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressModel"
            }
          },
          "favorites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FavoritesModel"
            }
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderModel"
            }
          },
          "basketItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BasketItemModel"
            }
          }
        },
        "additionalProperties": false
      },
      "UserRegistrationStatus": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserRoles": {
        "enum": [
          0
        ],
        "type": "integer",
        "format": "int32"
      },
      "VacancyFormModel": {
        "required": [
          "firstName",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "registrationFormDate": {
            "type": "string",
            "format": "date-time"
          },
          "vacancyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "phoneNumber": {
            "type": "string"
          },
          "previousJob": {
            "type": "string",
            "nullable": true
          },
          "vacancyType": {
            "$ref": "#/components/schemas/VacancyTypeModel"
          }
        },
        "additionalProperties": false
      },
      "VacancyTypeModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WayOfDelivery": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "WayOfPayment": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "DefaultApiAuthentication": {
        "type": "http",
        "description": "��������������� ���������. ������������ ����� ����������� ���� �����������. ������: \"Authorization: Bearer {token}\"",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "DefaultApiAuthentication": [ ]
    }
  ]
}