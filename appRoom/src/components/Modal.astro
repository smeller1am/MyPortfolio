---
interface Props {
  variant: "location" | "product" | "popover" | "click" | "anketa" | "contact";
  id: string;
  title?: string;
}

const { id, variant, title } = Astro.props;
---

<div {id} class:list={["modal", `modal--${variant}`]}>
  <div class="modal__container">
    {title && <div class="modal__title">{title}</div>}
    <slot />
  </div>
</div>

<style is:global lang="scss">
  .modal {
    color: $color-text-black;
    background-color: white;
    display: none;
    border-radius: 30px;
    padding: 50px 40px;
    width: 100%;

    &__container {
      display: flex;
      flex-direction: column;
      gap: 30px;
    }

    &--location {
      max-width: 455px;
    }

    &--product {
      max-width: 645px;
    }

    &--click {
      padding: 40px;
      max-width: 430px;
    }

    &--click &__title {
      text-align: center;
    }

    &--anketa {
      padding: 40px;
      max-width: 430px;
    }

    &--contact {
      max-width: 622px;
      padding: 50px 65px;
    }

    &__title {
      font-size: 28px;
      font-weight: 600;
      line-height: 1.2;
    }

    &__link {
      font-weight: 400;
      font-size: 20px;
      transition: colot 0.38s ease-in-out;

      &:hover,
      &--active {
        color: $color-text-purple;
        flex-wrap: wrap;
      }
    }

    &__text {
      font-size: 20px;
      font-weight: 400;
      line-height: 1.3;
    }

    &__col {
      display: grid;
      gap: 30px;
      justify-items: center;
      text-align: center;
    }

    &__list {
      gap: 14px;
      display: flex;
      flex-direction: column;
    }

    &__product {
      display: grid;
      grid-template-columns: auto 1fr;
      grid-template-rows: auto auto;
      grid-template-areas: "image content" ". buttons";
      column-gap: 16px;
      row-gap: 4px;

      &-image {
        width: 150px;
        height: 150px;
        aspect-ratio: 1;
        object-fit: contain;
        background-color: white;
        grid-area: image;
      }

      &-content {
        grid-area: content;
        display: flex;
        flex-direction: column;
      }

      &-title {
        color: $color-text-gray;
        font-size: 22px;
        font-weight: 400;
        line-height: 1.1;
        max-width: 20ch;
        margin-bottom: 15px;
      }

      &-price {
        font-weight: 500;
        line-height: 1;
        font-size: 22px;
        margin-bottom: 16px;
      }

      &-text {
      }

      &-buttons {
        grid-area: buttons;
        display: flex;
        justify-content: space-between;
        gap: 6px;
        flex-wrap: wrap;
      }
    }

    &__check {
      height: 116px;
      width: 116px;
      object-fit: contain;
      aspect-ratio: 1;
      margin-bottom: -10px;
    }

    &__stack {
      display: grid;
      gap: 20px;
    }

    &--anketa &__stack {
      gap: 15px;
    }

    &__click {
      display: grid;
      grid-template-columns: auto auto 1fr;
      grid-template-rows: auto auto;
      grid-template-areas: "image title title" "image price sale";

      &-image {
        height: 90px;
        width: 90px;
        aspect-ratio: 1;
        object-fit: contain;
        grid-area: image;
        margin-right: 20px;
      }

      &-title {
        font-size: 16px;
        font-weight: 400;
        color: $color-text-gray;
        max-width: 20ch;
        grid-area: title;

        @include laptop {
          line-height: 1.3;
        }
      }

      &-price {
        font-size: 20px;
        font-weight: 500;
        grid-area: price;
        align-self: end;
        margin-right: 15px;

        @include laptop {
          line-height: 1;
        }
      }

      &-sale {
        font-weight: 500;
        font-size: 14px;
        color: $color-text-gray;
        grid-area: sale;
        line-height: 2;
        align-self: end;
        text-decoration: line-through;

        @include laptop {
          line-height: 1;
        }
      }
    }
  }

  .fancybox__slide {
    padding-inline: 15px;
  }

  .fancybox__content > .f-button.is-close-btn {
    top: 24px;
    right: 24px;
    opacity: 1;
    --f-button-svg-width: 10px;
    --f-button-svg-height: 10px;
    --f-button-width: 26px;
    --f-button-height: 26px;
    --f-button-border-radius: 999px;
    --f-button-color: #{$color-text-black};
    --f-button-hover-color: #{$color-text-purple};
    transition: all 0.38s ease-in-out;
    transition-property: border, color;
    border: 2px solid $color-text-black;

    &:hover {
      border-color: $color-text-purple;
    }

    svg {
      stroke-width: 4px;
    }
  }

  .fancybox__backdrop {
    background-color: #222020a6;
  }

  @media (max-width: 992px) {
    .modal {
      border-radius: 20px;
      padding: 40px 20px;

      &--product {
        padding: 20px;
        max-width: 350px;

        .is-close-btn {
          display: none;
        }
      }

      &--popover {
        padding: 20px;
        padding-right: 35px;
        max-width: 345px;
      }

      &--click {
        max-width: 345px;
      }

      &--anketa {
        max-width: 345px;
        padding-inline: 20px;
      }

      &--contact {
        padding: 40px 15px;
        max-width: 345px;

        .button {
          min-width: 282px;
        }
      }

      &__container {
        gap: 20px;
      }

      &--anketa &__container {
        gap: 30px;
      }

      &--click &__container {
        gap: 32px;
      }

      &__check {
        margin-bottom: unset;
      }

      &__text {
        font-size: 16px;
      }

      &__col {
        gap: 21px;
      }

      &__check {
        height: 86px;
        width: 86px;
      }

      &__title {
        font-size: 22px;
      }

      &--contact &__title {
        font-size: 24px;
      }

      &--anketa &__title {
        text-align: center;
      }

      &__list {
      }

      &__link {
        font-size: 18px;
      }

      &__product {
        grid-template-areas: "image content" "buttons buttons";
        row-gap: 22px;
        column-gap: 12px;

        &-image {
          width: 100px;
          height: 100px;
        }

        &-content {
        }

        &-title {
          font-size: 14px;
          line-height: 1.4;
          margin-bottom: 17px;
        }

        &-price {
          font-size: 18px;
          margin-bottom: 7px;
        }

        &-text {
          font-size: 12px;
        }

        &-buttons {
        }
      }
      &__click {
        &-image {
          height: 73px;
          width: 73px;
          margin-right: 10px;
        }

        &-title {
          font-size: 14px;
        }

        &-price {
          font-size: 18px;
        }

        &-sale {
        }
      }

      &__stack {
        gap: 15px;
      }

      &--anketa &__stack {
        gap: 10px;
      }
    }

    .fancybox__content > .f-button.is-close-btn {
      top: 12px;
      right: 12px;
    }
  }
</style>

<script>
  import { Fancybox } from "@fancyapps/ui";
  import { closeDrawer } from "../script/utils";
  import { sendForm } from "src/script/api";

  function done() {
    const trigger = document.querySelector(".drawer-trigger");
    const container = document.querySelector(".drawer");
    if (trigger && container) closeDrawer(trigger, container);
  }

  Fancybox.bind(".modalbox", {
    compact: false,
    autoFocus: false,
    on: {
      done,
    },
  });

  const form = document.querySelector("#question form.modal__stack");
  const button = document.querySelector("#question .button");
  if (button instanceof HTMLElement && form instanceof HTMLFormElement) {
    form.addEventListener("submit", async (e) => {
      if (e.currentTarget instanceof HTMLFormElement) {
        e.preventDefault();

        try {
          button.classList.add("button--loading");
          const loader = document.createElement("div");
          loader.classList.remove("icon-check");
          loader.classList.add("icon-spin");
          loader.classList.add("animation-spin");
          loader.style.zIndex = "2";
          loader.style.fontSize = "26px";
          button.append(loader);

          const formData = new FormData(e.currentTarget);
          await sendForm(formData);

          if (form instanceof HTMLFormElement) form.reset();

          loader.remove();
          Fancybox.close();

          button.classList.remove("button--loading");

          const submodal = new Fancybox([{ src: "#contact" }], {
            closeButton: false,
            compact: false,
            autoFocus: false,
          });

          const close = document.querySelector("#contact .button");

          if (close) {
            close.addEventListener("click", () => submodal.close());
          }
        } catch (error) {
          console.log(error);
        }
      }
    });
  }
</script>
