---
import CompareCard from "./CompareCard.astro";
import NavButton from "./NavButton.astro";

interface Props {}

const items: { sale: boolean; tag: string }[] = [
  { sale: true, tag: "-10 000" },
  { sale: false, tag: "" },
  { sale: true, tag: "" },
  { sale: true, tag: "" },
  { sale: true, tag: "" },
  { sale: true, tag: "-10 000" },
  { sale: true, tag: "" },
  { sale: false, tag: "" },
  { sale: true, tag: "" },
  { sale: true, tag: "" },
];

const general: { title: string; text: string }[] = [
  {
    title: "Вес",
    text: "187 г",
  },
  {
    title: "Размер экрана",
    text: "6,1 дюйма",
  },
  {
    title: "Объем памяти",
    text: "187 г",
  },
];

const cpu: { title: string; text: string }[] = [
  {
    title: "Процессор",
    text: "A17 Pro",
  },
  {
    title: "Модель",
    text: "SIM+eSIM",
  },
];
---

<div class="compare-swiper">
  <div class="compare-swiper__swiper swiper">
    <div class="compare-swiper__wrapper swiper-wrapper">
      {
        items.map(({ tag, sale }) => (
          <div class="compare-swiper__slide swiper-slide">
            <CompareCard {tag} {sale} />
          </div>
        ))
      }
    </div>
  </div>

  <div class="compare-swiper__prev">
    <NavButton position="left" />
  </div>
  <div class="compare-swiper__counter"></div>
  <div class="compare-swiper__next">
    <NavButton position="right" />
  </div>

  <div class="compare-swiper__table">
    <div class="compare-swiper__table-title">Общие характеристики</div>
    {
      general.map(({ text, title }) => (
        <div class="compare-swiper__table-row swiper">
          <div class="compare-swiper__table-subtitle">{title}</div>
          <div class="compare-swiper__table-wrapper swiper-wrapper">
            {items.map(() => (
              <div class="compare-swiper__table-text swiper-slide">{text}</div>
            ))}
          </div>
        </div>
      ))
    }
    <div class="compare-swiper__table-title">Память и процессор</div>
    {
      cpu.map(({ text, title }) => (
        <div class="compare-swiper__table-row swiper">
          <div class="compare-swiper__table-subtitle">{title}</div>
          <div class="compare-swiper__table-wrapper swiper-wrapper">
            {items.map(() => (
              <div class="compare-swiper__table-text swiper-slide">{text}</div>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</div>

<style is:global lang="scss">
  .compare-swiper {
    display: grid;
    grid-auto-columns: auto 1fr auto;
    grid-template-rows: auto auto;

    &:nth-child(2) {
      display: none;
    }

    &__swiper {
      padding-inline: fluid(10px, 20px);
      width: 100%;
      box-shadow: $shadow-card;
      background-color: white;
      border-radius: 30px;
      grid-area: 1/1/2/-1;
    }

    &__table {
      background-color: white;
      margin-top: 30px;
      grid-area: bottom;
      width: 100%;
      box-shadow: $shadow-card;
      grid-area: 2/1/-1/-1;
      width: 100%;
      display: grid;
      border-radius: 30px;
      padding-bottom: 30px;

      &-wrapper {
        cursor: pointer;
        user-select: none;
      }

      &-row {
        width: 100%;
        padding-top: fluid(10px, 20px);
        padding-bottom: fluid(10px, 20px);

        &:nth-child(odd) {
          background-color: $color-background-gray-light;
        }
      }

      &-title {
        padding-top: fluid(20px, 35px);
        font-weight: 600;
        font-size: fluid(16px, 20px);
        padding-left: fluid(30px, 50px);
        margin-bottom: fluid(5px, 10px);
      }

      &-subtitle {
        color: $color-text-gray;
        font-size: fluid(14px, 18px);
        padding-left: fluid(30px, 50px);
        margin-bottom: 5px;
      }

      &-text {
        font-size: fluid(16px, 20px);
        padding-left: fluid(30px, 50px);
      }
    }

    &__wrapper {
    }

    &__slide {
      cursor: pointer;
      user-select: none;
    }

    &__next {
      align-self: center;
      grid-area: 1 / -1 / 2 / -1;
      z-index: 10;
      justify-self: end;
      margin-right: -32px;
    }

    &__prev {
      justify-self: start;
      align-self: center;
      grid-area: 1/1/2/2;
      z-index: 10;
      margin-left: -32px;
    }

    &__counter {
      display: none;
      user-select: none;
    }
  }

  @media (max-width: 1650px) {
    .compare-swiper {
      &__next {
        margin-right: -8px;
      }

      &__prev {
        margin-left: -8px;
      }
    }
  }

  @media (max-width: 768px) {
    .compare-swiper {
      grid-template-columns: 1fr auto 1fr;
      grid-template-rows: auto auto auto;
      grid-template-areas: "top top top" "prev count next" "bottom bottom bottom";
      row-gap: 10px;
      grid-template-columns: 1.1fr auto 1fr;
      &:nth-last-child(-2) {
      }

      &:first-child &__swiper {
        margin-right: 5px;
        width: calc(100% - 5px);
      }

      &:nth-child(2) {
        display: grid;
        grid-template-columns: 1fr auto 1.1fr;
      }
      &:nth-child(2) &__swiper {
        margin-left: 5px;
        width: calc(100% - 5px);
      }

      &__swiper {
        grid-area: top;
        padding-inline: unset;
        box-shadow: $shadow-card-less;
      }

      &__table {
        grid-area: bottom;
        border-radius: unset;
        box-shadow: unset;

        &-title {
          padding-left: 20px;
        }

        &-subtitle {
          padding-left: 20px;
        }

        &-text {
          padding-left: 20px;
        }
      }

      &:first-child &__table {
        border-top-left-radius: 20px;
        border-bottom-left-radius: 20px;
      }
      &:last-child &__table {
        border-top-right-radius: 20px;
        border-bottom-right-radius: 20px;
      }
      &:nth-child(2) &__table {
        &-title,
        &-subtitle {
          opacity: 0;
        }
      }

      &__wrapper {
      }

      &__slide {
      }

      &__next {
        grid-area: next;
        justify-self: start;
        align-self: center;
        margin: unset;
      }

      &__prev {
        grid-area: prev;
        justify-self: end;
        align-self: center;
        margin: unset;
      }

      &__counter {
        display: block;
        grid-area: count;
        justify-self: center;
        align-self: center;
        line-height: 1;
        font-size: 14px;
        font-weight: 400;
        color: $color-text-gray;
        margin-inline: 10px;
      }
    }
  }
  @media (max-width: 576px) {
    .compare-swiper {
      &:first-child &__swiper {
        margin-left: 15px;
        margin-right: 5px;
        width: calc(100% - 20px);
      }

      &:nth-child(2) &__swiper {
        margin-left: 5px;
        margin-right: 15px;
        width: calc(100% - 20px);
      }

      &__swiper {
        border-radius: 20px;
      }

      &__table {
        &-row {
          padding-top: 5px;
          padding-bottom: 5px;
        }

        &-title {
          font-size: 14px;
          padding-left: 15px;
          margin-bottom: 8px;
          padding-top: 16px;
        }

        &-subtitle {
          font-size: 12px;
          padding-left: 15px;
          margin-bottom: unset;
        }

        &-text {
          font-size: 14px;
          padding-left: 15px;
        }
      }

      &__wrapper {
      }

      &__slide {
      }
    }
  }
</style>

<script>
  import Swiper from "swiper";
  import { Navigation, Controller } from "swiper/modules";

  const compareSwipers = document.querySelectorAll(".compare-swiper");

  const breakpoints = {
    320: {
      slidesPerView: 1,
    },
    769: {
      slidesPerView: 3,
      spaceBetween: 20,
    },
    993: {
      slidesPerView: 4,
      spaceBetween: 30,
    },
  };

  compareSwipers.forEach((swiper) => setupSwipers(swiper));

  function setupSwipers(swiper: Element) {
    const topSwiper = swiper.querySelector(".compare-swiper__swiper");
    const tableSwipers = swiper.querySelectorAll(".compare-swiper__table-row");
    const prev = swiper.querySelector(".compare-swiper__prev");
    const next = swiper.querySelector(".compare-swiper__next");
    const counter = swiper.querySelector(".compare-swiper__counter");

    if (
      topSwiper instanceof HTMLElement &&
      prev instanceof HTMLElement &&
      next instanceof HTMLElement &&
      counter instanceof HTMLElement &&
      tableSwipers.length
    ) {
      const navigation = {
        nextEl: next,
        prevEl: prev,
      };

      function setCounter(element: HTMLElement, current: number, max: number) {
        element.innerText = `${current} из ${max}`;
      }

      const top = new Swiper(topSwiper, {
        modules: [Navigation, Controller],
        breakpoints,
        navigation,
        on: {
          init: (swiper) => setCounter(counter, 1, swiper.slides.length),
          activeIndexChange: (swiper) =>
            setCounter(counter, swiper.activeIndex + 1, swiper.slides.length),
        },
      });

      let swipers: Swiper[] = [];

      tableSwipers.forEach((row) => {
        if (row instanceof HTMLElement) {
          const rowSwiper = new Swiper(row, {
            modules: [Controller],
            breakpoints: {
              320: {
                slidesPerView: 1,
              },
              769: {
                slidesPerView: 3,
              },
              993: {
                slidesPerView: 4,
              },
            },
            // allowSlideNext: false,
            // allowSlidePrev: false,
          });
          rowSwiper.controller.control = top;

          swipers.push(rowSwiper);
        }
      });
      top.controller.control = swipers;
    }
  }
</script>
